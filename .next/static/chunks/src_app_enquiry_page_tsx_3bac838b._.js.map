{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/code%20file/rf/ve/src/app/enquiry/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { products } from \"@/data/products\";\n\ninterface FormData {\n  name: string;\n  company: string;\n  email: string;\n  phone: string;\n  product: string;\n  quantity: string;\n  requirements: string;\n}\n\nexport default function EnquiryPage() {\n  const [formData, setFormData] = useState<FormData>({\n    name: \"\",\n    company: \"\",\n    email: \"\",\n    phone: \"\",\n    product: \"\",\n    quantity: \"\",\n    requirements: \"\",\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage(\"\");\n\n    try {\n      const response = await fetch(\"/api/send-email\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (response.ok) {\n        setMessage(\"Email sent successfully!\");\n        setFormData({\n          name: \"\",\n          company: \"\",\n          email: \"\",\n          phone: \"\",\n          product: \"\",\n          quantity: \"\",\n          requirements: \"\",\n        });\n      } else {\n        setMessage(\"Failed to send email.\");\n      }\n    } catch (error) {\n      setMessage(\"Error sending email.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-8 max-w-3xl\">\n      <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-6\">\n        Request Quote\n      </h1>\n      <p className=\"text-gray-600 mb-8\">\n        Please fill out the form below to request a quote for our products.\n      </p>\n\n      <div className=\"bg-white p-6 rounded-lg shadow-md\">\n        <form onSubmit={handleSubmit} className=\"space-y-6 bg-gray-100 p-6 rounded-lg shadow-md\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* Name Input */}\n            <div>\n              <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">Name *</label>\n              <input type=\"text\" id=\"name\" required className=\"mt-1 w-full p-2 border rounded-md\" \n                value={formData.name} \n                onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n              />\n            </div>\n\n            {/* Company Name Input */}\n            <div>\n              <label htmlFor=\"company\" className=\"block text-sm font-medium text-gray-700\">Company Name</label>\n              <input type=\"text\" id=\"company\" className=\"mt-1 w-full p-2 border rounded-md\" \n                value={formData.company} \n                onChange={(e) => setFormData({ ...formData, company: e.target.value })}\n              />\n            </div>\n\n            {/* Email Input */}\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">Email *</label>\n              <input type=\"email\" id=\"email\" required className=\"mt-1 w-full p-2 border rounded-md\" \n                value={formData.email} \n                onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n              />\n            </div>\n\n            {/* Phone Input */}\n            <div>\n              <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700\">Phone *</label>\n              <input type=\"tel\" id=\"phone\" required className=\"mt-1 w-full p-2 border rounded-md\" \n                value={formData.phone} \n                onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\n              />\n            </div>\n\n            {/* Product Dropdown */}\n            <div>\n              <label htmlFor=\"product\" className=\"block text-sm font-medium text-gray-700\">Product *</label>\n              <select id=\"product\" required className=\"mt-1 w-full p-2 border rounded-md\" \n                value={formData.product} \n                onChange={(e) => setFormData({ ...formData, product: e.target.value })}\n              >\n                <option value=\"\">Select a product</option>\n                {products.map((product) => (\n                  <option key={product.id} value={product.id}>{product.name}</option>\n                ))}\n              </select>\n            </div>\n\n            {/* Quantity Input */}\n            <div>\n              <label htmlFor=\"quantity\" className=\"block text-sm font-medium text-gray-700\">Quantity</label>\n              <input type=\"text\" id=\"quantity\" className=\"mt-1 w-full p-2 border rounded-md\" \n                value={formData.quantity} \n                onChange={(e) => setFormData({ ...formData, quantity: e.target.value })}\n              />\n            </div>\n          </div>\n\n          {/* Requirements Input */}\n          <div>\n            <label htmlFor=\"requirements\" className=\"block text-sm font-medium text-gray-700\">Specific Requirements</label>\n            <textarea id=\"requirements\" rows={4} className=\"mt-1 w-full p-2 border rounded-md\" \n              value={formData.requirements} \n              onChange={(e) => setFormData({ ...formData, requirements: e.target.value })}\n            ></textarea>\n          </div>\n\n          {/* Submit Button */}\n          <button type=\"submit\" className=\"w-full bg-[#0E9696] text-white py-3 px-4 rounded-md hover:bg-primary/90 transition-colors duration-300\" disabled={loading}>\n            {loading ? \"Sending...\" : \"Submit Request\"}\n          </button>\n\n          {/* Success/Error Message */}\n          {message && <p className={`mt-4 text-center ${message.includes(\"successfully\") ? \"text-green-600\" : \"text-red-600\"}`}>{message}</p>}\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}