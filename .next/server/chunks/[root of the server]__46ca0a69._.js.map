{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file://D%3A/code%20file/rf/rf/ve/src/app/api/send-email/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport nodemailer from \"nodemailer\";\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const {\r\n      name,\r\n      company,\r\n      email,\r\n      phone,\r\n      product,\r\n      quantity,\r\n      requirements,\r\n    } = await req.json();\r\n\r\n    const transporter = nodemailer.createTransport({\r\n      service: \"gmail\",\r\n      auth: {\r\n        user: process.env.EMAIL_USER,\r\n        pass: process.env.EMAIL_PASS,\r\n      },\r\n    });\r\n\r\n    const htmlContent = `\r\n      <div style=\"font-family: Arial, sans-serif; padding: 24px; color: #333; max-width: 700px; margin: auto; border: 1px solid #ddd; border-radius: 10px; background-color: #f9f9f9;\">\r\n        <h1 style=\"color: #0E9696; font-size: 28px; margin-bottom: 20px;\">üì© New Product Enquiry</h1>\r\n        <p style=\"font-size: 16px; margin-bottom: 24px;\">You have received a new enquiry from your website:</p>\r\n        <table style=\"width: 100%; font-size: 16px; border-collapse: collapse;\">\r\n          <tr><td style=\"padding: 10px; font-weight: bold;\">üë§ Name:</td><td style=\"padding: 10px;\">${name}</td></tr>\r\n          <tr><td style=\"padding: 10px; font-weight: bold;\">üè¢ Company:</td><td style=\"padding: 10px;\">${company || \"‚Äî\"}</td></tr>\r\n          <tr><td style=\"padding: 10px; font-weight: bold;\">üìß Email:</td><td style=\"padding: 10px;\">${email}</td></tr>\r\n          <tr><td style=\"padding: 10px; font-weight: bold;\">üìû Phone:</td><td style=\"padding: 10px;\">${phone}</td></tr>\r\n          <tr><td style=\"padding: 10px; font-weight: bold;\">üì¶ Product:</td><td style=\"padding: 10px;\">${product}</td></tr>\r\n          <tr><td style=\"padding: 10px; font-weight: bold;\">üî¢ Quantity:</td><td style=\"padding: 10px;\">${quantity || \"‚Äî\"}</td></tr>\r\n          <tr>\r\n            <td style=\"padding: 10px; font-weight: bold; vertical-align: top;\">üìù Requirements:</td>\r\n            <td style=\"padding: 10px; white-space: pre-line;\">${requirements || \"‚Äî\"}</td>\r\n          </tr>\r\n        </table>\r\n        <p style=\"margin-top: 30px; font-size: 16px;\">Best regards,<br/><strong style=\"color: #0E9696;\">RF Enquiry Bot</strong></p>\r\n      </div>\r\n    `;\r\n\r\n    const mailOptions = {\r\n      from: process.env.EMAIL_USER,\r\n      to: process.env.RECIPIENT_EMAIL,\r\n      subject: `New Enquiry from ${name}`,\r\n      html: htmlContent,\r\n    };\r\n\r\n    await transporter.sendMail(mailOptions);\r\n\r\n    return NextResponse.json({ message: \"Email sent successfully!\" }, { status: 200 });\r\n  } catch (error) {\r\n    console.error(\"Error sending email:\", error);\r\n    return NextResponse.json({ error: \"Failed to send email\" }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EACJ,IAAI,EACJ,OAAO,EACP,KAAK,EACL,KAAK,EACL,OAAO,EACP,QAAQ,EACR,YAAY,EACb,GAAG,MAAM,IAAI,IAAI;QAElB,MAAM,cAAc,iJAAA,CAAA,UAAU,CAAC,eAAe,CAAC;YAC7C,SAAS;YACT,MAAM;gBACJ,MAAM,QAAQ,GAAG,CAAC,UAAU;gBAC5B,MAAM,QAAQ,GAAG,CAAC,UAAU;YAC9B;QACF;QAEA,MAAM,cAAc,CAAC;;;;;oGAK2E,EAAE,KAAK;uGACJ,EAAE,WAAW,IAAI;qGACnB,EAAE,MAAM;qGACR,EAAE,MAAM;uGACN,EAAE,QAAQ;wGACT,EAAE,YAAY,IAAI;;;8DAG5D,EAAE,gBAAgB,IAAI;;;;;IAKhF,CAAC;QAED,MAAM,cAAc;YAClB,MAAM,QAAQ,GAAG,CAAC,UAAU;YAC5B,IAAI,QAAQ,GAAG,CAAC,eAAe;YAC/B,SAAS,CAAC,iBAAiB,EAAE,MAAM;YACnC,MAAM;QACR;QAEA,MAAM,YAAY,QAAQ,CAAC;QAE3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAA2B,GAAG;YAAE,QAAQ;QAAI;IAClF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC5E;AACF","debugId":null}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}